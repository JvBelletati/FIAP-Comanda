{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport axios from \"axios\";\nimport { createContext, useState } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var AuthContext = createContext({});\nexport function AuthProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  function login(_x) {\n    return _login.apply(this, arguments);\n  }\n  function _login() {\n    _login = _asyncToGenerator(function* (credenciais) {\n      var resp = yield axios.get(\"http://localhost:3000/usuarios\");\n      var usuarios = resp.data;\n      var usuario = usuarios.find(function (u) {\n        return u.email == credenciais.email;\n      });\n      if (usuario && usuario.senha == credenciais.senha) {\n        setUsername(usuario.nome);\n        return true;\n      }\n      return false;\n    });\n    return _login.apply(this, arguments);\n  }\n  return _jsx(AuthContext.Provider, {\n    value: {\n      username: username,\n      login: login\n    },\n    children: children\n  });\n}","map":{"version":3,"names":["axios","createContext","useState","jsx","_jsx","AuthContext","AuthProvider","_ref","children","_useState","_useState2","_slicedToArray","username","setUsername","login","_x","_login","apply","arguments","_asyncToGenerator","credenciais","resp","get","usuarios","data","usuario","find","u","email","senha","nome","Provider","value"],"sources":["C:/Users/logonrmlocal/Downloads/FIAP-Comanda/context/AuthContext.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { createContext, useState } from \"react\";\r\n\r\nexport const AuthContext = createContext({})\r\n\r\nexport function AuthProvider({children}){\r\n    const [username, setUsername] = useState(null)\r\n\r\n    async function login(credenciais){\r\n        const resp = await axios.get(\"http://localhost:3000/usuarios\")\r\n        const usuarios = resp.data\r\n\r\n        const usuario = usuarios.find(u => u.email == credenciais.email)\r\n\r\n        if(usuario && usuario.senha == credenciais.senha){\r\n            setUsername(usuario.nome)\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    return(\r\n        <AuthContext.Provider value={{username, login}}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n\r\n    )\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAEhD,OAAO,IAAMC,WAAW,GAAGJ,aAAa,CAAC,CAAC,CAAC,CAAC;AAE5C,OAAO,SAASK,YAAYA,CAAAC,IAAA,EAAY;EAAA,IAAVC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;EAClC,IAAAC,SAAA,GAAgCP,QAAQ,CAAC,IAAI,CAAC;IAAAQ,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAvCG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAAkB,SAE/BI,KAAKA,CAAAC,EAAA;IAAA,OAAAC,MAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAAA,SAAAF,OAAA;IAAAA,MAAA,GAAAG,iBAAA,CAApB,WAAqBC,WAAW,EAAC;MAC7B,IAAMC,IAAI,SAASrB,KAAK,CAACsB,GAAG,CAAC,gCAAgC,CAAC;MAC9D,IAAMC,QAAQ,GAAGF,IAAI,CAACG,IAAI;MAE1B,IAAMC,OAAO,GAAGF,QAAQ,CAACG,IAAI,CAAC,UAAAC,CAAC;QAAA,OAAIA,CAAC,CAACC,KAAK,IAAIR,WAAW,CAACQ,KAAK;MAAA,EAAC;MAEhE,IAAGH,OAAO,IAAIA,OAAO,CAACI,KAAK,IAAIT,WAAW,CAACS,KAAK,EAAC;QAC7ChB,WAAW,CAACY,OAAO,CAACK,IAAI,CAAC;QACzB,OAAO,IAAI;MACf;MACA,OAAO,KAAK;IAChB,CAAC;IAAA,OAAAd,MAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAED,OACId,IAAA,CAACC,WAAW,CAAC0B,QAAQ;IAACC,KAAK,EAAE;MAACpB,QAAQ,EAARA,QAAQ;MAAEE,KAAK,EAALA;IAAK,CAAE;IAAAN,QAAA,EAC1CA;EAAQ,CACS,CAAC;AAG/B"},"metadata":{},"sourceType":"module","externalDependencies":[]}